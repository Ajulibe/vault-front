name: Test and Deploy Notification App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 21.2.0

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Cache pnpm store
      uses: actions/cache@v2
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: pnpm install

    - name: Run linter
      run: pnpm run lint

  # test:
  #   runs-on: ubuntu-latest
  #   needs: lint

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'

  #   - name: Install pnpm
  #     run: npm install -g pnpm

  #   - name: Cache pnpm store
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/.pnpm-store
  #       key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
  #       restore-keys: |
  #         ${{ runner.os }}-pnpm-

  #   - name: Install dependencies
  #     run: pnpm install

  #   - name: Run tests
  #     run: pnpm test

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '14'

  #   - name: Install pnpm
  #     run: npm install -g pnpm

  #   - name: Cache pnpm store
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/.pnpm-store
  #       key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
  #       restore-keys: |
  #         ${{ runner.os }}-pnpm-

  #   - name: Install dependencies
  #     run: pnpm install

  #   - name: Build project
  #     run: pnpm run build

  #   - name: Deploy to Vercel
  #     run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
  #     env:
  #       VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #       VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
